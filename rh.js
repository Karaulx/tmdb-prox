(function(){
    if(window.__rh_ultimate_final) return;
    window.__rh_ultimate_final = true;

    console.log('[RH ULTIMATE FINAL] Starting nuclear approach');

    // 1. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    const config = {
        name: "üî• –°–ú–û–¢–†–ï–¢–¨",
        apiUrl: "https://api4.rhhhhhhh.live/play",
        btnId: "rh-ultimate-btn",
        retryDelay: 300,
        maxRetries: 50 // 15 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º
    };

    // 2. –°–æ–∑–¥–∞–µ–º "–Ω–µ—É–±–∏–≤–∞–µ–º—É—é" –∫–Ω–æ–ø–∫—É
    const createButton = () => {
        let btn = document.getElementById(config.btnId);
        if(!btn) {
            btn = document.createElement('button');
            btn.id = config.btnId;
            btn.style.cssText = `
                position: fixed !important;
                right: 20px !important;
                bottom: 80px !important;
                z-index: 2147483647 !important;
                background: linear-gradient(135deg, #FF0000, #FF4500) !important;
                color: white !important;
                padding: 14px 28px !important;
                border-radius: 12px !important;
                font-size: 18px !important;
                font-weight: bold !important;
                cursor: pointer !important;
                border: none !important;
                box-shadow: 0 6px 24px rgba(255, 0, 0, 0.4) !important;
                display: flex !important;
                align-items: center !important;
                gap: 10px !important;
            `;
            document.body.appendChild(btn);
        }
        return btn;
    };

    // 3. –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è ID (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    const getTmdbId = () => {
        const sources = [
            // 1. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã Lampa
            () => window.Lampa?.Storage?.get('card'),
            
            // 2. –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Lampa
            () => window.Lampa?.TMDB?.data?.id ? {
                id: window.Lampa.TMDB.data.id,
                type: window.Lampa.TMDB.data.type
            } : null,
            
            // 3. URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            () => {
                const match = window.location.href.match(/\/(movie|tv)\/(\d+)/);
                return match ? {id: match[2], type: match[1]} : null;
            },
            
            // 4. Data-–∞—Ç—Ä–∏–±—É—Ç—ã
            () => {
                const el = document.querySelector('[data-id][data-type]');
                return el ? {
                    id: el.dataset.id,
                    type: el.dataset.type
                } : null;
            },
            
            // 5. –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
            () => window._lampa_events?.current?.id ? {
                id: window._lampa_events.current.id,
                type: window._lampa_events.current.type
            } : null,
            
            // 6. –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–µ—à Lampa
            () => window.Lampa?.Cache?.get('card'),
            
            // 7. –ü–µ—Ä–µ—Ö–≤–∞—Ç XHR-–∑–∞–ø—Ä–æ—Å–æ–≤
            () => {
                if(window._lampa_last_xhr_url) {
                    const match = window._lampa_last_xhr_url.match(/(movie|tv)\/(\d+)/);
                    return match ? {id: match[2], type: match[1]} : null;
                }
                return null;
            }
        ];

        // –ü—Ä–æ–±—É–µ–º –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        for(let source of sources) {
            try {
                const result = source();
                if(result?.id) {
                    console.log('ID found via:', source.toString().slice(0, 80));
                    return {
                        id: result.id,
                        type: result.type || 'movie',
                        title: result.title || ''
                    };
                }
            } catch(e) {
                console.warn('Source error:', e);
            }
        }
        
        return null;
    };

    // 4. –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ XHR (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥)
    const hookXHR = () => {
        if(window.XMLHttpRequest.isHooked) return;
        
        const originalOpen = XMLHttpRequest.prototype.open;
        XMLHttpRequest.prototype.open = function(method, url) {
            if(url.includes('themoviedb')) {
                window._lampa_last_xhr_url = url;
            }
            return originalOpen.apply(this, arguments);
        };
        
        window.XMLHttpRequest.isHooked = true;
        console.log('XHR hook installed');
    };

    // 5. –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    const init = (retryCount = 0) => {
        const btn = createButton();
        const tmdbData = getTmdbId();

        if(tmdbData?.id) {
            // –£—Å–ø–µ—Ö - –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            btn.innerHTML = `<span style="font-size:20px">‚ñ∂Ô∏è</span> ${config.name}`;
            btn.onclick = () => {
                const params = new URLSearchParams({
                    tmdb_id: tmdbData.id,
                    type: tmdbData.type,
                    title: tmdbData.title || '',
                    _: Date.now()
                });
                window.open(`${config.apiUrl}?${params}`, '_blank');
            };
            btn.style.display = 'block';
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –≤–Ω–∏–º–∞–Ω–∏—è
            btn.style.animation = 'rh-pulse 1.5s infinite';
            const style = document.createElement('style');
            style.textContent = `
                @keyframes rh-pulse {
                    0% { transform: scale(1); }
                    50% { transform: scale(1.05); }
                    100% { transform: scale(1); }
                }
            `;
            document.head.appendChild(style);
            
            console.log(`Success! ID: ${tmdbData.id}`);
            return;
        }

        if(retryCount < config.maxRetries) {
            // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏
            setTimeout(() => init(retryCount + 1), config.retryDelay);
            if(retryCount === 0) hookXHR(); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫
        } else {
            // –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã
            btn.innerHTML = `<span style="font-size:20px">‚ùå</span> –û—à–∏–±–∫–∞`;
            btn.onclick = () => {
                alert('–î–µ–π—Å—Ç–≤–∏—è:\n1. –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫—Ä–æ–π—Ç–µ –∫–∞—Ä—Ç–æ—á–∫—É\n2. –ù–∞–∂–º–∏—Ç–µ F5 –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏\n3. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è - —Å–æ–æ–±—â–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É');
            };
            btn.style.display = 'block';
            console.error('Failed after all retries');
        }
    };

    // 6. –ó–∞–ø—É—Å–∫
    const start = () => {
        if(document.readyState === 'complete') {
            setTimeout(init, 500);
        } else {
            window.addEventListener('load', () => setTimeout(init, 500));
        }
        setTimeout(init, 3000); // –î—É–±–ª–∏—Ä—É—é—â–∏–π –∑–∞–ø—É—Å–∫
    };

    start();
})();
