(function(){
    if(window.__rh_absolute_solution) return;
    window.__rh_absolute_solution = true;

    console.log('[RH ABSOLUTE SOLUTION] Starting nuclear approach');

    // 1. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    const config = {
        name: "üî• RH –ü–ª–µ–µ—Ä",
        apiUrl: "https://api4.rhhhhhhh.live/play",
        btnId: "rh-absolute-btn",
        maxWaitTime: 15000 // 15 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º
    };

    // 2. –°–æ–∑–¥–∞–µ–º "–Ω–µ—É–±–∏–≤–∞–µ–º—É—é" –∫–Ω–æ–ø–∫—É
    const createButton = () => {
        let btn = document.getElementById(config.btnId);
        if(!btn) {
            btn = document.createElement('button');
            btn.id = config.btnId;
            btn.style.cssText = `
                position: fixed !important;
                right: 20px !important;
                bottom: 80px !important;
                z-index: 2147483647 !important;
                background: linear-gradient(135deg, #FF0000, #FF4500) !important;
                color: white !important;
                padding: 14px 28px !important;
                border-radius: 12px !important;
                font-size: 18px !important;
                font-weight: bold !important;
                cursor: pointer !important;
                border: none !important;
                box-shadow: 0 6px 24px rgba(255, 0, 0, 0.4) !important;
                display: flex !important;
                align-items: center !important;
                gap: 10px !important;
            `;
            btn.innerHTML = `<span style="font-size:20px">‚ñ∂Ô∏è</span> ${config.name}`;
            document.body.appendChild(btn);
        }
        return btn;
    };

    // 3. –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∏
    const getCardData = () => {
        // –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        const sources = [
            // 1. –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π API Lampa
            () => {
                try {
                    const card = window.Lampa?.Storage?.get('card');
                    if(card?.id) return card;
                } catch(e) {}
                return null;
            },
            
            // 2. –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Lampa
            () => {
                try {
                    if(window.Lampa?.TMDB?.data?.id) {
                        return {
                            id: window.Lampa.TMDB.data.id,
                            type: window.Lampa.TMDB.data.type,
                            title: window.Lampa.TMDB.data.title
                        };
                    }
                } catch(e) {}
                return null;
            },
            
            // 3. –ê–Ω–∞–ª–∏–∑ DOM
            () => {
                try {
                    const meta = document.querySelector('meta[property="tmdb:id"]');
                    if(meta) {
                        return {
                            id: meta.content,
                            type: document.querySelector('meta[property="tmdb:type"]')?.content || 'movie'
                        };
                    }
                } catch(e) {}
                return null;
            },
            
            // 4. –ü–µ—Ä–µ—Ö–≤–∞—Ç —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
            () => {
                try {
                    if(window._rh_last_tmdb_request) {
                        const match = window._rh_last_tmdb_request.match(/(movie|tv)\/(\d+)/);
                        if(match) return {id: match[2], type: match[1]};
                    }
                } catch(e) {}
                return null;
            },
            
            // 5. –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Lampa
            () => {
                try {
                    if(window._lampa_events?.current?.id) {
                        return {
                            id: window._lampa_events.current.id,
                            type: window._lampa_events.current.type
                        };
                    }
                } catch(e) {}
                return null;
            }
        ];

        // –ü—Ä–æ–±—É–µ–º –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        for(let source of sources) {
            try {
                const data = source();
                if(data?.id) {
                    console.log('Data source:', source.toString().slice(0, 100));
                    return {
                        id: data.id,
                        type: data.type || 'movie',
                        title: data.title || '',
                        season: data.season,
                        episode: data.episode
                    };
                }
            } catch(e) {
                console.warn('Source error:', e);
            }
        }
        
        return null;
    };

    // 4. –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    const hookNetworkRequests = () => {
        if(window.XMLHttpRequest.isHooked) return;
        
        const originalOpen = XMLHttpRequest.prototype.open;
        XMLHttpRequest.prototype.open = function(method, url) {
            if(url.includes('themoviedb')) {
                window._rh_last_tmdb_request = url;
            }
            return originalOpen.apply(this, arguments);
        };
        
        window.XMLHttpRequest.isHooked = true;
        console.log('Network hook installed');
    };

    // 5. –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    const init = (startTime = Date.now()) => {
        hookNetworkRequests();
        const btn = createButton();
        const card = getCardData();

        if(card?.id) {
            // –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ
            btn.onclick = () => {
                const params = new URLSearchParams({
                    tmdb_id: card.id,
                    type: card.type,
                    season: card.season || '',
                    episode: card.episode || '',
                    title: encodeURIComponent(card.title),
                    _: Date.now()
                });
                
                // –ü—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ Lampa Player
                if(window.Lampa?.Player?.play) {
                    window.Lampa.Player.play({
                        title: card.title,
                        files: [{
                            title: card.title,
                            file: `${config.apiUrl}?${params}`,
                            type: 'video/mp4'
                        }]
                    });
                } else {
                    window.open(`${config.apiUrl}?${params}`, '_blank');
                }
            };
            
            console.log('Success! ID:', card.id);
            return;
        }

        if(Date.now() - startTime < config.maxWaitTime) {
            setTimeout(() => init(startTime), 500);
        } else {
            btn.onclick = () => {
                alert('–î–ª—è —Ä–∞–±–æ—Ç—ã –ø–ª–∞–≥–∏–Ω–∞:\n1. –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫—Ä–æ–π—Ç–µ –∫–∞—Ä—Ç–æ—á–∫—É\n2. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≥—Ä—É–∑–∫–∏\n3. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (Ctrl+F5)');
            };
            console.error('Failed after all attempts');
        }
    };

    // 6. –ó–∞–ø—É—Å–∫
    if(document.readyState === 'complete') {
        setTimeout(init, 1000);
    } else {
        window.addEventListener('load', () => setTimeout(init, 1000));
    }

    // –î—É–±–ª–∏—Ä—É—é—â–∏–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(init, 5000);
})();
