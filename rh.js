// Lampa-ReYohoho Bridge (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
(function() {
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    const config = {
        reyohohoUrl: "https://reyohoho.github.io/reyohoho/?search=",
        buttonPosition: "bottom: 20px; right: 20px;",
        buttonColor: "#4CAF50",
        debugMode: true,
        maxRetries: 3 // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    };

    // –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ Lampa
    function waitForLampa(callback, attempts = 0) {
        if (window.Lampa && window.Lampa.Storage && window.Lampa.Player) {
            callback();
        } else if (attempts < 30) { // 30 –ø–æ–ø—ã—Ç–æ–∫ (3 —Å–µ–∫—É–Ω–¥—ã)
            setTimeout(() => waitForLampa(callback, attempts + 1), 100);
        } else {
            console.error("[Lampa-ReYohoho] Lampa API –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å");
        }
    }

    waitForLampa(function() {
        console.log("[Lampa-ReYohoho] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è");

        // üîÑ –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ TMDB
        function getTmdbData(retry = 0) {
            try {
                // 1. –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ Lampa.Storage
                const item = Lampa.Storage.get('current_item') || {};
                
                // 2. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –ø–∞—Ä—Å–∏–º DOM
                if (!item.title && !item.name) {
                    const titleElement = document.querySelector('.card__title, .full-start__title, .player__title');
                    const yearElement = document.querySelector('.card__year, .full-start__year, .player__year');
                    const posterElement = document.querySelector('.card__poster, .full-start__poster, .player__poster img');
                    
                    item.title = titleElement?.textContent?.trim() || '';
                    item.name = item.title; // –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                    item.year = parseInt(yearElement?.textContent) || new Date().getFullYear();
                    item.poster = posterElement?.src || posterElement?.getAttribute('data-src') || '';
                    
                    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (—Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª)
                    const path = window.location.pathname;
                    item.type = path.includes('/tv/') ? 'tv' : 'movie';
                }

                // 3. –ï—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–∫ –∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑ (–µ—Å–ª–∏ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ –∏—Å—á–µ—Ä–ø–∞–Ω—ã)
                if (!item.title && !item.name && retry < config.maxRetries) {
                    console.log(`[Lampa-ReYohoho] –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (${retry + 1})`);
                    return new Promise(resolve => 
                        setTimeout(() => resolve(getTmdbData(retry + 1)), 500)
                    );
                }

                // 4. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Ö
                if (item.title || item.name) {
                    return {
                        id: item.id,
                        type: item.type,
                        title: item.title || item.name,
                        year: item.year,
                        poster: item.poster || item.cover || ''
                    };
                } else {
                    console.error("[Lampa-ReYohoho] –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
                    return null;
                }
            } catch (e) {
                console.error("[Lampa-ReYohoho] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:", e);
                return null;
            }
        }

        // üé¨ –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
        function createButton() {
            const buttonId = 'reyohoho-bridge-btn';
            
            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å
            const oldButton = document.getElementById(buttonId);
            if (oldButton) oldButton.remove();

            const button = document.createElement('div');
            button.id = buttonId;
            button.innerHTML = `
                <style>
                    #${buttonId} {
                        position: fixed;
                        ${config.buttonPosition}
                        padding: 12px 16px;
                        background: ${config.buttonColor};
                        color: white;
                        font-family: Arial;
                        font-size: 14px;
                        font-weight: bold;
                        border-radius: 8px;
                        z-index: 99999;
                        cursor: pointer;
                        display: flex;
                        align-items: center;
                        gap: 8px;
                        box-shadow: 0 0 10px rgba(0,0,0,0.5);
                        transition: all 0.3s;
                    }
                    #${buttonId}:hover {
                        transform: scale(1.05);
                        opacity: 0.9;
                    }
                    #${buttonId}:active {
                        transform: scale(0.95);
                    }
                </style>
                <svg width="20" height="20" viewBox="0 0 24 24" fill="white">
                    <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5l-4.5-4.5 1.5-1.5 3 3 7.5-7.5 1.5 1.5-9 9z"/>
                </svg>
                ReYohoho
            `;

            // üîç –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ (–ø–æ–∏—Å–∫ + –∑–∞–ø—É—Å–∫ –ø–ª–µ–µ—Ä–∞)
            button.addEventListener('click', async function() {
                const tmdbData = await getTmdbData();
                
                if (!tmdbData?.title) {
                    Lampa.Noty.show("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–Ω—Ç–µ–Ω—Ç–µ", "error");
                    return;
                }

                Lampa.Noty.show(`–ü–æ–∏—Å–∫: ${tmdbData.title}...`, "info");
                
                try {
                    // –û—Ç–∫—Ä—ã–≤–∞–µ–º ReYohoho –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
                    const searchUrl = `${config.reyohohoUrl}${encodeURIComponent(tmdbData.title + " " + tmdbData.year)}`;
                    window.open(searchUrl, '_blank');
                    
                    // (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–∞ —á–µ—Ä–µ–∑ API, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
                } catch (e) {
                    console.error("[Lampa-ReYohoho] –û—à–∏–±–∫–∞:", e);
                    Lampa.Noty.show("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ", "error");
                }
            });

            document.body.appendChild(button);
        }

        // üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        function init() {
            createButton();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            if (Lampa.Listener && Lampa.Listener.follow) {
                Lampa.Listener.follow('content', (e) => {
                    if (e.type === 'item') {
                        setTimeout(createButton, 500);
                    }
                });
            }
        }

        init();
    });
})();
